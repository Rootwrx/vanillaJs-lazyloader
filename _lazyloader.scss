

@mixin lazy-loader(
  $loader-size: 50px,
  $loader-border: 5px,
  $loader-color: var(--clr-red),
  $loader-bg: var(--clr-rose-50)
) {
  &.loader {
    position: relative;
    overflow: hidden;
    &::after,
    &::before {
      content: "";
      position: absolute;
    }

    &::before {
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      height: $loader-size;
      width: $loader-size;
      border: $loader-border solid $loader-color;
      border-left-width: 0px;
      z-index: 10;
      border-radius: 50%;
      animation: loaderspin 1s linear infinite;
    }

    &::after {
      height: 100%;
      width: 100%;
      background-color: $loader-bg;
      z-index: 5;
      inset: 0;
    }

    &:has(.loaded) {
      &::before,
      &::after {
        @include fade(out) ;
      }
    }

    &:has(.failed) {
      &::before {
        border: none;
        content: "Error loading image";
        font-family: "Courier New", Courier, monospace;
        height: 0;
        animation: none;
        white-space: nowrap;
        text-align: center;
        width: fit-content;
        font-size: var(--fs-h4);
        color: var(--clr-red);
        font-weight: var(--fw-bold);
      }
      &::after ,&::before {
        content: none;
        display: none;
      }
    }
  }

  img.lazy {
    filter: blur(19px);
    opacity: 0;
    transition: opacity 0.3s ease-in, filter .6s ease-in;

    &.loaded {
      opacity: 1;
      filter: blur(0);
    }
  }
}

@keyframes loaderspin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@mixin fade($type: in, $duration: 0.3s, $easing: ease-in-out) {
  transition: all $duration $easing, height 0.3s ease-in-out;
  @if $type == in {
    pointer-events: all;
    visibility: visible;
    opacity: 1;
  } @else if $type == out {
    visibility: hidden;
    pointer-events: none;
    opacity: 0;
  }
}
